
import { useState, useEffect } from 'react';

export type Language = 'en' | 'hi';

// Storage key for language preference
const LANGUAGE_STORAGE_KEY = '@si_app_language';

// Translations object
const translations = {
  en: {
    // Common
    common: {
      continue: 'Continue',
      cancel: 'Cancel',
      ok: 'OK',
      back: 'Back',
      next: 'Next',
      done: 'Done',
      loading: 'Loading...',
      error: 'Error',
      success: 'Success',
      warning: 'Warning',
      offline: 'Offline',
      retry: 'Retry',
      close: 'Close',
      help: 'Help',
      settings: 'Settings',
    },

    // Enhanced Error Messages
    errors: {
      networkError: 'Network connection failed. Please check your internet connection and try again.',
      serverError: 'Server is temporarily unavailable. Please try again in a few minutes.',
      videoUploadFailed: 'Video upload failed. The video will be saved locally and uploaded when connection is restored.',
      invalidVideoFormat: 'Invalid video format. Please select an MP4 or MOV file.',
      videoTooLarge: 'Video file is too large. Please select a video under 100MB.',
      cameraPermissionDenied: 'Camera permission is required to record videos. Please enable camera access in settings.',
      storagePermissionDenied: 'Storage permission is required to save videos. Please enable storage access in settings.',
      analysisTimeout: 'Video analysis is taking longer than expected. Your video is saved and will be processed soon.',
      unexpectedError: 'An unexpected error occurred. Please restart the app and try again.',
      offlineMode: 'You are offline. Videos will be saved locally and synced when connection is restored.',
      
      // Error Boundary specific
      unexpectedErrorTitle: 'Oops! Something went wrong',
      errorIconDescription: 'Error icon indicating a problem occurred',
      retryButtonLabel: 'Retry the last action',
      retryButtonHint: 'Attempts to fix the error and continue',
      restartButtonLabel: 'Restart Kreeda app',
      restartButtonHint: 'Closes and reopens the app completely',
      restartTitle: 'Restart Kreeda',
      restartMessage: 'Restarting the app may fix this issue. Your saved videos will not be lost.',
      restartApp: 'Restart App',
      retrying: 'Retrying your request...',
      
      // Error titles
      networkTitle: 'Connection Problem',
      serverTitle: 'Server Issue',
      permissionTitle: 'Permission Required',
      uploadTitle: 'Upload Failed',
      analysisTitle: 'Analysis Delayed',
      
      // Additional error messages
      storageError: 'Unable to access device storage. Please check available space and permissions.',
      permissionGuide: 'Please enable the required permissions in Settings to continue using Kreeda.',
    },

    // Branding
    branding: {
      appFullName: 'Kreeda Sports Talent Assessment',
      tagline: 'Unleash Your Sports Potential',
      poweredBy: 'Powered by AI Technology',
      madeInIndia: 'Made in India üáÆüá≥',
      version: 'Version {version}',
    },

    // Login Screen
    login: {
      title: 'Kreeda',
      subtitle: 'AI-Powered Sports Talent Assessment',
      appName: 'Kreeda Sports',
      athleteNameLabel: 'Athlete Name',
      athleteNamePlaceholder: 'Enter your name',
      backendUrlLabel: 'Backend Server URL',
      backendUrlPlaceholder: 'http://192.168.1.100:8000',
      helpLink: 'Need help? üì°',
      continueButton: 'Continue',
      connecting: 'Connecting...',
      footer: 'Discover your sports potential with Kreeda AI analysis',
      errorEmptyName: 'Please enter athlete name',
      connectionWarning: 'Connection Warning',
      connectionMessage: 'Cannot connect to backend server. You can still record videos locally and sync later.',
      continueOffline: 'Continue Offline',
      checkSettings: 'Check Settings',
      loginError: 'Failed to save settings. Please try again.',
    },

    // Test Select Screen
    testSelect: {
      welcomeTitle: 'Welcome, {name}',
      subtitle: 'Select Exercise Type',
      instructions: 'Choose the exercise you want to record and analyze:',
      pushupTitle: 'Push-ups',
      pushupDescription: 'Upper body strength test with form analysis',
      situpTitle: 'Sit-ups',
      situpDescription: 'Core strength test with form analysis',
      recordingTips: '‚ÑπÔ∏è Recording Tips',
      footer: 'üéØ AI will analyze your form, count repetitions, and verify integrity',
    },

    // Record Screen
    record: {
      title: 'Record {exercise}',
      titlePushup: 'Record Push-ups',
      titleSitup: 'Record Sit-ups',
      athleteSubtitle: 'Athlete: {name}',
      instructionsTitle: 'Recording Instructions:',
      instructions: '‚Ä¢ Position camera at side angle (profile view)\n‚Ä¢ Ensure full body is visible in frame\n‚Ä¢ Use good lighting with minimal shadows\n‚Ä¢ Keep camera steady throughout recording\n‚Ä¢ Perform 5-10 repetitions at normal speed\n‚Ä¢ Keep your face visible for identity verification',
      startRecording: 'üìπ Start Recording',
      recording: 'üî¥ Recording...',
      videoRecorded: '‚úÖ Video Recorded',
      uploadingAnalyzing: 'Uploading and Analyzing... {progress}%',
      syncPending: 'üì§ Sync Pending',
      viewResults: 'üìä View Results',
      footer: 'üí° Videos are saved locally and can be uploaded when connection is available',
      pickVideoFile: 'Pick Video File',
      generateTestVideo: 'Generate Test Video',
      videoSelected: 'Video Selected',
      uploadNow: 'Upload Now',
      uploadLater: 'Upload Later',
      generateTestTitle: 'Generate Test Video',
      generateTestMessage: 'This would create a synthetic test video using the test video generator from the overlay module. In the actual implementation, this would call the Python script to generate a test video.',
      uploadSuccessful: 'Upload Successful!',
      viewResultsPrompt: 'Your video has been analyzed. View results?',
      uploadFailed: 'Upload Failed',
      uploadError: 'Failed to upload video. Please try again.',
      noPendingUploads: 'No Pending Uploads',
      allSynced: 'All videos are already synced.',
      syncPendingPrompt: 'You have {count} unsynced videos. Upload them now?',
      syncNow: 'Sync Now',
      syncComplete: 'Sync Complete',
      syncResults: 'Successfully uploaded: {successful}\nFailed: {failed}',
      syncError: 'Failed to sync uploads',
    },

    // Results Screen
    results: {
      title: 'Analysis Results',
      repsLabel: 'Total Reps',
      validRepsLabel: 'Valid Reps',
      postureScoreLabel: 'Posture Score',
      integrityCheckLabel: 'Integrity Check',
      passed: 'üü¢ Passed',
      failed: 'üî¥ Failed',
      good: 'üü¢ Good',
      fair: 'üü° Fair',
      poor: 'üî¥ Poor',
      efficiency: '{percent}% efficiency',
      issuesDetected: 'Issues detected',
      noIssues: 'No issues',
      integrityIssues: '‚ö†Ô∏è Integrity issues detected:',
      noIntegrityIssues: '‚úÖ No integrity issues detected',
      frameDuplication: 'üìπ Excessive frame duplication detected - possible video tampering',
      faceInconsistency: 'üë§ Face position inconsistency - possible identity switching',
      excessiveRepRate: '‚ö° Unphysiological repetition rate - possible speed manipulation',
      technicalDetails: 'Technical Details',
      downloadOriginal: 'üìπ Download Original',
      downloadOverlay: 'üéØ Download Overlay',
      generateOverlay: 'üéØ Generate Overlay',
      viewFrameAnalysis: 'üîç Frame Analysis',
      exportReport: 'üìÑ Export Report',
    },

    // Video Recorder
    videoRecorder: {
      guidancePushup: 'Place phone 1.5m away ‚Ä¢ Keep full body in frame ‚Ä¢ Side angle view for push-ups',
      guidanceSitup: 'Place phone 1.5m away ‚Ä¢ Keep full body in frame ‚Ä¢ Side angle view for sit-ups',
      startRecording: 'Start recording',
      stopRecording: 'Stop recording',
      recordingTime: 'Recording for {time}. Tap to stop.',
      startPrompt: 'Tap to start recording {exercise} exercise',
    },

    // Offline Banner
    offline: {
      offline: 'Offline',
      queued: 'Offline ‚Ä¢ {count} queued',
      pendingUploads: '{count} pending upload{plural}',
      tapToSync: 'Tap to sync',
      offlineMessage: 'You are offline with {count} videos queued for upload',
      currentlyOffline: 'You are currently offline',
      pendingMessage: '{count} video{plural} pending upload',
    },

    // Help Content
    help: {
      networkTitle: 'Backend URL Help',
      networkMessage: 'Enter the IP address of your computer running the backend server.\n\nExample: http://192.168.1.100:8000\n\nMake sure your phone and computer are on the same WiFi network.\n\nTo find your computer\'s IP:\n‚Ä¢ Windows: ipconfig\n‚Ä¢ Mac/Linux: ifconfig or ip addr',
      
      pushupTitle: 'Push-up Test',
      pushupInstructions: 'Record yourself doing push-ups from a side angle.\n\n‚Ä¢ Position camera to show your full body profile\n‚Ä¢ Ensure good lighting with minimal shadows\n‚Ä¢ Maintain steady camera position\n‚Ä¢ Perform 5-10 repetitions at normal speed\n‚Ä¢ Keep your face visible for verification',
      
      situpTitle: 'Sit-up Test',
      situpInstructions: 'Record yourself doing sit-ups from a side angle.\n\n‚Ä¢ Position camera to show your full body profile\n‚Ä¢ Ensure good lighting with minimal shadows\n‚Ä¢ Keep legs bent at knees (traditional sit-up position)\n‚Ä¢ Perform 5-10 repetitions at normal speed\n‚Ä¢ Keep your face visible for verification',
    },

    // Accessibility
    accessibility: {
      goBack: 'Go back',
      showHelp: 'Show help',
      openHelpDialog: 'Opens help dialog',
      changeLanguage: 'Change language',
      recordingTimeAnnouncement: 'Recording time: {current} of {max}',
    },
  },

  hi: {
    // Common
    common: {
      continue: '‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ‡•á‡§Ç',
      cancel: '‡§∞‡§¶‡•ç‡§¶ ‡§ï‡§∞‡•á‡§Ç',
      ok: '‡§†‡•Ä‡§ï ‡§π‡•à',
      back: '‡§µ‡§æ‡§™‡§∏',
      next: '‡§Ö‡§ó‡§≤‡§æ',
      done: '‡§™‡•Ç‡§∞‡•ç‡§£',
      loading: '‡§≤‡•ã‡§° ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à...',
      error: '‡§§‡•ç‡§∞‡•Å‡§ü‡§ø',
      success: '‡§∏‡§´‡§≤‡§§‡§æ',
      warning: '‡§ö‡•á‡§§‡§æ‡§µ‡§®‡•Ä',
      offline: '‡§ë‡§´‡§º‡§≤‡§æ‡§á‡§®',
      retry: '‡§™‡•Å‡§®‡§É ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏',
      close: '‡§¨‡§Ç‡§¶ ‡§ï‡§∞‡•á‡§Ç',
      help: '‡§∏‡§π‡§æ‡§Ø‡§§‡§æ',
      settings: '‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏',
    },

    // Enhanced Error Messages
    errors: {
      networkError: '‡§®‡•á‡§ü‡§µ‡§∞‡•ç‡§ï ‡§ï‡§®‡•á‡§ï‡•ç‡§∂‡§® ‡§µ‡§ø‡§´‡§≤‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡§æ ‡§á‡§Ç‡§ü‡§∞‡§®‡•á‡§ü ‡§ï‡§®‡•á‡§ï‡•ç‡§∂‡§® ‡§ú‡§æ‡§Ç‡§ö‡•á‡§Ç ‡§î‡§∞ ‡§™‡•Å‡§®‡§É ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç‡•§',
      serverError: '‡§∏‡§∞‡•ç‡§µ‡§∞ ‡§Ö‡§∏‡•ç‡§•‡§æ‡§Ø‡•Ä ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§Ö‡§®‡•Å‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•à‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§ï‡•Å‡§õ ‡§Æ‡§ø‡§®‡§ü‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§™‡•Å‡§®‡§É ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç‡•§',
      videoUploadFailed: '‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§Ö‡§™‡§≤‡•ã‡§° ‡§µ‡§ø‡§´‡§≤‡•§ ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§∏‡•ç‡§•‡§æ‡§®‡•Ä‡§Ø ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§∏‡§π‡•á‡§ú‡§æ ‡§ú‡§æ‡§è‡§ó‡§æ ‡§î‡§∞ ‡§ï‡§®‡•á‡§ï‡•ç‡§∂‡§® ‡§¨‡§π‡§æ‡§≤‡•Ä ‡§™‡§∞ ‡§Ö‡§™‡§≤‡•ã‡§° ‡§π‡•ã‡§ó‡§æ‡•§',
      invalidVideoFormat: '‡§Ö‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§™‡•ç‡§∞‡§æ‡§∞‡•Ç‡§™‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ MP4 ‡§Ø‡§æ MOV ‡§´‡§º‡§æ‡§á‡§≤ ‡§ö‡•Å‡§®‡•á‡§Ç‡•§',
      videoTooLarge: '‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§´‡§º‡§æ‡§á‡§≤ ‡§¨‡§π‡•Å‡§§ ‡§¨‡§°‡§º‡•Ä ‡§π‡•à‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ 100MB ‡§∏‡•á ‡§ï‡§Æ ‡§ï‡§æ ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ö‡•Å‡§®‡•á‡§Ç‡•§',
      cameraPermissionDenied: '‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§° ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡•à‡§Æ‡§∞‡§æ ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§π‡•à‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏ ‡§Æ‡•á‡§Ç ‡§ï‡•à‡§Æ‡§∞‡§æ ‡§è‡§ï‡•ç‡§∏‡•á‡§∏ ‡§∏‡§ï‡•ç‡§∑‡§Æ ‡§ï‡§∞‡•á‡§Ç‡•§',
      storagePermissionDenied: '‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§∏‡§π‡•á‡§ú‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡•ç‡§ü‡•ã‡§∞‡•á‡§ú ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§π‡•à‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏ ‡§Æ‡•á‡§Ç ‡§∏‡•ç‡§ü‡•ã‡§∞‡•á‡§ú ‡§è‡§ï‡•ç‡§∏‡•á‡§∏ ‡§∏‡§ï‡•ç‡§∑‡§Æ ‡§ï‡§∞‡•á‡§Ç‡•§',
      analysisTimeout: '‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§Ö‡§™‡•á‡§ï‡•ç‡§∑‡§æ ‡§∏‡•á ‡§Ö‡§ß‡§ø‡§ï ‡§∏‡§Æ‡§Ø ‡§≤‡•á ‡§∞‡§π‡§æ ‡§π‡•à‡•§ ‡§Ü‡§™‡§ï‡§æ ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§∏‡§π‡•á‡§ú‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à ‡§î‡§∞ ‡§ú‡§≤‡•ç‡§¶ ‡§π‡•Ä ‡§™‡•ç‡§∞‡•ã‡§∏‡•á‡§∏ ‡§π‡•ã‡§ó‡§æ‡•§',
      unexpectedError: '‡§è‡§ï ‡§Ö‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡§æ‡§∂‡§ø‡§§ ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø ‡§π‡•Å‡§à ‡§π‡•à‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§ê‡§™ ‡§ï‡•ã ‡§™‡•Å‡§®‡§É ‡§Ü‡§∞‡§Ç‡§≠ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§™‡•Å‡§®‡§É ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç‡•§',
      offlineMode: '‡§Ü‡§™ ‡§ë‡§´‡§º‡§≤‡§æ‡§á‡§® ‡§π‡•à‡§Ç‡•§ ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§∏‡•ç‡§•‡§æ‡§®‡•Ä‡§Ø ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§∏‡§π‡•á‡§ú‡•á ‡§ú‡§æ‡§è‡§Ç‡§ó‡•á ‡§î‡§∞ ‡§ï‡§®‡•á‡§ï‡•ç‡§∂‡§® ‡§¨‡§π‡§æ‡§≤‡•Ä ‡§™‡§∞ ‡§∏‡§ø‡§Ç‡§ï ‡§π‡•ã‡§Ç‡§ó‡•á‡•§',
      
      // Error Boundary specific
      unexpectedErrorTitle: '‡§Ö‡§∞‡•á! ‡§ï‡•Å‡§õ ‡§ó‡§≤‡§§ ‡§π‡•Å‡§Ü ‡§π‡•à',
      errorIconDescription: '‡§§‡•ç‡§∞‡•Å‡§ü‡§ø ‡§Ü‡§á‡§ï‡§® ‡§ú‡•ã ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ ‡§ï‡§æ ‡§∏‡§Ç‡§ï‡•á‡§§ ‡§¶‡•á‡§§‡§æ ‡§π‡•à',
      retryButtonLabel: '‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§ï‡•ã ‡§™‡•Å‡§®‡§É ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç',
      retryButtonHint: '‡§§‡•ç‡§∞‡•Å‡§ü‡§ø ‡§ï‡•ã ‡§†‡•Ä‡§ï ‡§ï‡§∞‡§®‡•á ‡§î‡§∞ ‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ‡§®‡•á ‡§ï‡§æ ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à',
      restartButtonLabel: '‡§ï‡•ç‡§∞‡•Ä‡§°‡§º‡§æ ‡§ê‡§™ ‡§ï‡•ã ‡§™‡•Å‡§®‡§É ‡§Ü‡§∞‡§Ç‡§≠ ‡§ï‡§∞‡•á‡§Ç',
      restartButtonHint: '‡§ê‡§™ ‡§ï‡•ã ‡§™‡•Ç‡§∞‡•Ä ‡§§‡§∞‡§π ‡§∏‡•á ‡§¨‡§Ç‡§¶ ‡§ï‡§∞‡§ï‡•á ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§ñ‡•ã‡§≤‡§§‡§æ ‡§π‡•à',
      restartTitle: '‡§ï‡•ç‡§∞‡•Ä‡§°‡§º‡§æ ‡§ï‡•ã ‡§™‡•Å‡§®‡§É ‡§Ü‡§∞‡§Ç‡§≠ ‡§ï‡§∞‡•á‡§Ç',
      restartMessage: '‡§ê‡§™ ‡§ï‡•ã ‡§™‡•Å‡§®‡§É ‡§Ü‡§∞‡§Ç‡§≠ ‡§ï‡§∞‡§®‡§æ ‡§á‡§∏ ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ ‡§ï‡•ã ‡§†‡•Ä‡§ï ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§ ‡§Ü‡§™‡§ï‡•á ‡§∏‡§π‡•á‡§ú‡•á ‡§ó‡§è ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ñ‡•ã ‡§®‡§π‡•Ä‡§Ç ‡§ú‡§æ‡§è‡§Ç‡§ó‡•á‡•§',
      restartApp: '‡§ê‡§™ ‡§™‡•Å‡§®‡§É ‡§Ü‡§∞‡§Ç‡§≠ ‡§ï‡§∞‡•á‡§Ç',
      retrying: '‡§Ü‡§™‡§ï‡•á ‡§Ö‡§®‡•Å‡§∞‡•ã‡§ß ‡§ï‡•ã ‡§™‡•Å‡§®‡§É ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç...',
      
      // Error titles
      networkTitle: '‡§ï‡§®‡•á‡§ï‡•ç‡§∂‡§® ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ',
      serverTitle: '‡§∏‡§∞‡•ç‡§µ‡§∞ ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ',
      permissionTitle: '‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï',
      uploadTitle: '‡§Ö‡§™‡§≤‡•ã‡§° ‡§µ‡§ø‡§´‡§≤',
      analysisTitle: '‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§Æ‡•á‡§Ç ‡§¶‡•á‡§∞‡•Ä',
      
      // Additional error messages
      storageError: '‡§°‡§ø‡§µ‡§æ‡§á‡§∏ ‡§∏‡•ç‡§ü‡•ã‡§∞‡•á‡§ú ‡§§‡§ï ‡§™‡§π‡•Å‡§Ç‡§ö ‡§®‡§π‡•Ä‡§Ç‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§∏‡•ç‡§•‡§æ‡§® ‡§î‡§∞ ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø‡§Ø‡§æ‡§Ç ‡§ú‡§æ‡§Ç‡§ö‡•á‡§Ç‡•§',
      permissionGuide: '‡§ï‡•ç‡§∞‡•Ä‡§°‡§º‡§æ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡•É‡§™‡§Ø‡§æ ‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏ ‡§Æ‡•á‡§Ç ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø‡§Ø‡§æ‡§Ç ‡§∏‡§ï‡•ç‡§∑‡§Æ ‡§ï‡§∞‡•á‡§Ç‡•§',
    },

    // Branding
    branding: {
      appFullName: '‡§ï‡•ç‡§∞‡•Ä‡§°‡§º‡§æ ‡§ñ‡•á‡§≤ ‡§™‡•ç‡§∞‡§§‡§ø‡§≠‡§æ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø‡§æ‡§Ç‡§ï‡§®',
      tagline: '‡§Ö‡§™‡§®‡•Ä ‡§ñ‡•á‡§≤ ‡§ï‡•ç‡§∑‡§Æ‡§§‡§æ ‡§ï‡•ã ‡§â‡§ú‡§æ‡§ó‡§∞ ‡§ï‡§∞‡•á‡§Ç',
      poweredBy: 'AI ‡§§‡§ï‡§®‡•Ä‡§ï ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§∏‡§Ç‡§ö‡§æ‡§≤‡§ø‡§§',
      madeInIndia: '‡§≠‡§æ‡§∞‡§§ ‡§Æ‡•á‡§Ç ‡§®‡§ø‡§∞‡•ç‡§Æ‡§ø‡§§ üáÆüá≥',
      version: '‡§∏‡§Ç‡§∏‡•ç‡§ï‡§∞‡§£ {version}',
    },

    // Login Screen
    login: {
      title: '‡§ï‡•ç‡§∞‡•Ä‡§°‡§º‡§æ',
      subtitle: 'AI-‡§∏‡§Ç‡§ö‡§æ‡§≤‡§ø‡§§ ‡§ñ‡•á‡§≤ ‡§™‡•ç‡§∞‡§§‡§ø‡§≠‡§æ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø‡§æ‡§Ç‡§ï‡§®',
      appName: '‡§ï‡•ç‡§∞‡•Ä‡§°‡§º‡§æ ‡§∏‡•ç‡§™‡•ã‡§∞‡•ç‡§ü‡•ç‡§∏',
      athleteNameLabel: '‡§ñ‡§ø‡§≤‡§æ‡§°‡§º‡•Ä ‡§ï‡§æ ‡§®‡§æ‡§Æ',
      athleteNamePlaceholder: '‡§Ö‡§™‡§®‡§æ ‡§®‡§æ‡§Æ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç',
      backendUrlLabel: '‡§¨‡•à‡§ï‡§è‡§Ç‡§° ‡§∏‡§∞‡•ç‡§µ‡§∞ URL',
      backendUrlPlaceholder: 'http://192.168.1.100:8000',
      helpLink: '‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§ö‡§æ‡§π‡§ø‡§è? üì°',
      continueButton: '‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ‡•á‡§Ç',
      connecting: '‡§ï‡§®‡•á‡§ï‡•ç‡§ü ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à...',
      footer: '‡§ï‡•ç‡§∞‡•Ä‡§°‡§º‡§æ AI ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§Ö‡§™‡§®‡•Ä ‡§ñ‡•á‡§≤ ‡§ï‡•ç‡§∑‡§Æ‡§§‡§æ ‡§ñ‡•ã‡§ú‡•á‡§Ç',
      errorEmptyName: '‡§ï‡•É‡§™‡§Ø‡§æ ‡§ñ‡§ø‡§≤‡§æ‡§°‡§º‡•Ä ‡§ï‡§æ ‡§®‡§æ‡§Æ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç',
      connectionWarning: '‡§ï‡§®‡•á‡§ï‡•ç‡§∂‡§® ‡§ö‡•á‡§§‡§æ‡§µ‡§®‡•Ä',
      connectionMessage: '‡§¨‡•à‡§ï‡§è‡§Ç‡§° ‡§∏‡§∞‡•ç‡§µ‡§∞ ‡§∏‡•á ‡§ï‡§®‡•á‡§ï‡•ç‡§ü ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã ‡§∏‡§ï‡§§‡§æ‡•§ ‡§Ü‡§™ ‡§Ö‡§≠‡•Ä ‡§≠‡•Ä ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§∏‡•ç‡§•‡§æ‡§®‡•Ä‡§Ø ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§° ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç ‡§î‡§∞ ‡§¨‡§æ‡§¶ ‡§Æ‡•á‡§Ç ‡§∏‡§ø‡§Ç‡§ï ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§',
      continueOffline: '‡§ë‡§´‡§º‡§≤‡§æ‡§á‡§® ‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ‡•á‡§Ç',
      checkSettings: '‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏ ‡§ú‡§æ‡§Ç‡§ö‡•á‡§Ç',
      loginError: '‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏ ‡§∏‡§π‡•á‡§ú‡§®‡•á ‡§Æ‡•á‡§Ç ‡§µ‡§ø‡§´‡§≤‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§™‡•Å‡§®‡§É ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç‡•§',
    },

    // Test Select Screen
    testSelect: {
      welcomeTitle: '‡§∏‡•ç‡§µ‡§æ‡§ó‡§§, {name}',
      subtitle: '‡§µ‡•ç‡§Ø‡§æ‡§Ø‡§æ‡§Æ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ö‡•Å‡§®‡•á‡§Ç',
      instructions: '‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§° ‡§î‡§∞ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡•ç‡§Ø‡§æ‡§Ø‡§æ‡§Æ ‡§ö‡•Å‡§®‡•á‡§Ç:',
      pushupTitle: '‡§™‡•Å‡§∂-‡§Ö‡§™‡•ç‡§∏',
      pushupDescription: '‡§∞‡•Ç‡§™ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§ä‡§™‡§∞‡•Ä ‡§∂‡§∞‡•Ä‡§∞ ‡§ï‡•Ä ‡§∂‡§ï‡•ç‡§§‡§ø ‡§™‡§∞‡•Ä‡§ï‡•ç‡§∑‡§æ',
      situpTitle: '‡§∏‡§ø‡§ü-‡§Ö‡§™‡•ç‡§∏',
      situpDescription: '‡§∞‡•Ç‡§™ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§∂‡§ï‡•ç‡§§‡§ø ‡§™‡§∞‡•Ä‡§ï‡•ç‡§∑‡§æ',
      recordingTips: '‚ÑπÔ∏è ‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§°‡§ø‡§Ç‡§ó ‡§∏‡•Å‡§ù‡§æ‡§µ',
      footer: 'üéØ AI ‡§Ü‡§™‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§ï‡§æ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ï‡§∞‡•á‡§ó‡§æ, ‡§¶‡•ã‡§π‡§∞‡§æ‡§µ ‡§ó‡§ø‡§®‡•á‡§ó‡§æ, ‡§î‡§∞ ‡§∏‡§§‡•ç‡§Ø‡§®‡§ø‡§∑‡•ç‡§†‡§æ ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§ø‡§§ ‡§ï‡§∞‡•á‡§ó‡§æ',
    },

    // Record Screen
    record: {
      title: '{exercise} ‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§° ‡§ï‡§∞‡•á‡§Ç',
      titlePushup: '‡§™‡•Å‡§∂-‡§Ö‡§™‡•ç‡§∏ ‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§° ‡§ï‡§∞‡•á‡§Ç',
      titleSitup: '‡§∏‡§ø‡§ü-‡§Ö‡§™‡•ç‡§∏ ‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§° ‡§ï‡§∞‡•á‡§Ç',
      athleteSubtitle: '‡§ñ‡§ø‡§≤‡§æ‡§°‡§º‡•Ä: {name}',
      instructionsTitle: '‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§°‡§ø‡§Ç‡§ó ‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂:',
      instructions: '‚Ä¢ ‡§ï‡•à‡§Æ‡§∞‡§æ ‡§ï‡•ã ‡§∏‡§æ‡§á‡§° ‡§è‡§Ç‡§ó‡§≤ (‡§™‡•ç‡§∞‡•ã‡§´‡§æ‡§á‡§≤ ‡§µ‡•ç‡§Ø‡•Ç) ‡§™‡§∞ ‡§∞‡§ñ‡•á‡§Ç\n‚Ä¢ ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç ‡§ï‡§ø ‡§™‡•Ç‡§∞‡§æ ‡§∂‡§∞‡•Ä‡§∞ ‡§´‡•ç‡§∞‡•á‡§Æ ‡§Æ‡•á‡§Ç ‡§¶‡§ø‡§ñ‡§æ‡§à ‡§¶‡•á\n‚Ä¢ ‡§Ö‡§ö‡•ç‡§õ‡•Ä ‡§∞‡•ã‡§∂‡§®‡•Ä ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§ï‡§Æ ‡§õ‡§æ‡§Ø‡§æ ‡§ï‡•á ‡§∏‡§æ‡§•\n‚Ä¢ ‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§°‡§ø‡§Ç‡§ó ‡§ï‡•á ‡§¶‡•å‡§∞‡§æ‡§® ‡§ï‡•à‡§Æ‡§∞‡§æ ‡§∏‡•ç‡§•‡§ø‡§∞ ‡§∞‡§ñ‡•á‡§Ç\n‚Ä¢ ‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§ó‡§§‡§ø ‡§∏‡•á 5-10 ‡§¶‡•ã‡§π‡§∞‡§æ‡§µ ‡§ï‡§∞‡•á‡§Ç\n‚Ä¢ ‡§™‡§π‡§ö‡§æ‡§® ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§® ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ö‡•á‡§π‡§∞‡§æ ‡§¶‡§ø‡§ñ‡§æ‡§à ‡§¶‡•á‡§§‡§æ ‡§∞‡§π‡•á',
      startRecording: 'üìπ ‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§°‡§ø‡§Ç‡§ó ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç',
      recording: 'üî¥ ‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§°‡§ø‡§Ç‡§ó...',
      videoRecorded: '‚úÖ ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§° ‡§π‡•Å‡§Ü',
      uploadingAnalyzing: '‡§Ö‡§™‡§≤‡•ã‡§° ‡§î‡§∞ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£... {progress}%',
      syncPending: 'üì§ ‡§∏‡§ø‡§Ç‡§ï ‡§≤‡§Ç‡§¨‡§ø‡§§',
      viewResults: 'üìä ‡§™‡§∞‡§ø‡§£‡§æ‡§Æ ‡§¶‡•á‡§ñ‡•á‡§Ç',
      footer: 'üí° ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§∏‡•ç‡§•‡§æ‡§®‡•Ä‡§Ø ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§∏‡§π‡•á‡§ú‡•á ‡§ú‡§æ‡§§‡•á ‡§π‡•à‡§Ç ‡§î‡§∞ ‡§ï‡§®‡•á‡§ï‡•ç‡§∂‡§® ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•ã‡§®‡•á ‡§™‡§∞ ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§ø‡§è ‡§ú‡§æ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç',
      pickVideoFile: '‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§´‡§º‡§æ‡§á‡§≤ ‡§ö‡•Å‡§®‡•á‡§Ç',
      generateTestVideo: '‡§ü‡•á‡§∏‡•ç‡§ü ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ú‡•á‡§®‡§∞‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç',
      videoSelected: '‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ö‡•Å‡§®‡§æ ‡§ó‡§Ø‡§æ',
      uploadNow: '‡§Ö‡§≠‡•Ä ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç',
      uploadLater: '‡§¨‡§æ‡§¶ ‡§Æ‡•á‡§Ç ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç',
      generateTestTitle: '‡§ü‡•á‡§∏‡•ç‡§ü ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ú‡•á‡§®‡§∞‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç',
      generateTestMessage: '‡§Ø‡§π ‡§ì‡§µ‡§∞‡§≤‡•á ‡§Æ‡•â‡§°‡•ç‡§Ø‡•Ç‡§≤ ‡§∏‡•á ‡§ü‡•á‡§∏‡•ç‡§ü ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ú‡•á‡§®‡§∞‡•á‡§ü‡§∞ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§ï‡•á ‡§è‡§ï ‡§∏‡§ø‡§Ç‡§•‡•á‡§ü‡§ø‡§ï ‡§ü‡•á‡§∏‡•ç‡§ü ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§¨‡§®‡§æ‡§è‡§ó‡§æ‡•§ ‡§µ‡§æ‡§∏‡•ç‡§§‡§µ‡§ø‡§ï ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§æ‡§®‡•ç‡§µ‡§Ø‡§® ‡§Æ‡•á‡§Ç, ‡§Ø‡§π ‡§ü‡•á‡§∏‡•ç‡§ü ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è Python ‡§∏‡•ç‡§ï‡•ç‡§∞‡§ø‡§™‡•ç‡§ü ‡§ï‡•ã ‡§ï‡•â‡§≤ ‡§ï‡§∞‡•á‡§ó‡§æ‡•§',
      uploadSuccessful: '‡§Ö‡§™‡§≤‡•ã‡§° ‡§∏‡§´‡§≤!',
      viewResultsPrompt: '‡§Ü‡§™‡§ï‡•á ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ï‡§æ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§π‡•ã ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§ ‡§™‡§∞‡§ø‡§£‡§æ‡§Æ ‡§¶‡•á‡§ñ‡•á‡§Ç?',
      uploadFailed: '‡§Ö‡§™‡§≤‡•ã‡§° ‡§µ‡§ø‡§´‡§≤',
      uploadError: '‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç ‡§µ‡§ø‡§´‡§≤‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§™‡•Å‡§®‡§É ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç‡•§',
      noPendingUploads: '‡§ï‡•ã‡§à ‡§≤‡§Ç‡§¨‡§ø‡§§ ‡§Ö‡§™‡§≤‡•ã‡§° ‡§®‡§π‡•Ä‡§Ç',
      allSynced: '‡§∏‡§≠‡•Ä ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§™‡§π‡§≤‡•á ‡§∏‡•á ‡§∏‡§ø‡§Ç‡§ï ‡§π‡•à‡§Ç‡•§',
      syncPendingPrompt: '‡§Ü‡§™‡§ï‡•á ‡§™‡§æ‡§∏ {count} ‡§¨‡§ø‡§®‡§æ ‡§∏‡§ø‡§Ç‡§ï ‡§ï‡§ø‡§è ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§π‡•à‡§Ç‡•§ ‡§Ö‡§≠‡•Ä ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç?',
      syncNow: '‡§Ö‡§≠‡•Ä ‡§∏‡§ø‡§Ç‡§ï ‡§ï‡§∞‡•á‡§Ç',
      syncComplete: '‡§∏‡§ø‡§Ç‡§ï ‡§™‡•Ç‡§∞‡•ç‡§£',
      syncResults: '‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§Ö‡§™‡§≤‡•ã‡§°: {successful}\n‡§µ‡§ø‡§´‡§≤: {failed}',
      syncError: '‡§Ö‡§™‡§≤‡•ã‡§° ‡§∏‡§ø‡§Ç‡§ï ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç ‡§µ‡§ø‡§´‡§≤',
    },

    // Results Screen (abbreviated for brevity - full translations would continue)
    results: {
      title: '‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§™‡§∞‡§ø‡§£‡§æ‡§Æ',
      repsLabel: '‡§ï‡•Å‡§≤ ‡§¶‡•ã‡§π‡§∞‡§æ‡§µ',
      validRepsLabel: '‡§µ‡•à‡§ß ‡§¶‡•ã‡§π‡§∞‡§æ‡§µ',
      postureScoreLabel: '‡§Æ‡•Å‡§¶‡•ç‡§∞‡§æ ‡§∏‡•ç‡§ï‡•ã‡§∞',
      integrityCheckLabel: '‡§∏‡§§‡•ç‡§Ø‡§®‡§ø‡§∑‡•ç‡§†‡§æ ‡§ú‡§æ‡§Ç‡§ö',
      passed: 'üü¢ ‡§â‡§§‡•ç‡§§‡•Ä‡§∞‡•ç‡§£',
      failed: 'üî¥ ‡§Ö‡§∏‡§´‡§≤',
      good: 'üü¢ ‡§Ö‡§ö‡•ç‡§õ‡§æ',
      fair: 'üü° ‡§†‡•Ä‡§ï',
      poor: 'üî¥ ‡§ñ‡§∞‡§æ‡§¨',
    },

    // Additional Hindi translations would continue...
    // For brevity, showing key sections only
  },
};

// Type for translation keys (for TypeScript support)
type TranslationKey = string;

class I18nService {
  private currentLanguage: Language = 'en';

  async initialize(): Promise<void> {
    // Simple in-memory storage for demo
    // In production, would use AsyncStorage or similar
    console.log('I18n initialized with language:', this.currentLanguage);
  }

  async setLanguage(language: Language): Promise<void> {
    this.currentLanguage = language;
    console.log('Language changed to:', language);
  }

  getCurrentLanguage(): Language {
    return this.currentLanguage;
  }

  // Get translation with parameter substitution
  t(key: string, params?: Record<string, string | number>): string {
    const keys = key.split('.');
    let value: any = translations[this.currentLanguage];

    // Navigate through nested keys
    for (const k of keys) {
      value = value?.[k];
      if (value === undefined) {
        console.warn(`Translation key not found: ${key}`);
        return key; // Return key as fallback
      }
    }

    if (typeof value !== 'string') {
      console.warn(`Translation value is not a string: ${key}`);
      return key;
    }

    // Parameter substitution
    if (params) {
      return Object.entries(params).reduce((str, [param, val]) => {
        return str.replace(new RegExp(`\\{${param}\\}`, 'g'), String(val));
      }, value);
    }

    return value;
  }

  // Plural helper
  plural(count: number, singular: string, plural?: string): string {
    if (count === 1) return singular;
    return plural || singular + 's';
  }
}

// Create singleton instance
export const i18n = new I18nService();

// React hook for using translations
export const useTranslation = () => {
  const [language, setLanguageState] = useState<Language>(i18n.getCurrentLanguage());

  const changeLanguage = async (newLanguage: Language) => {
    await i18n.setLanguage(newLanguage);
    setLanguageState(newLanguage);
  };

  return {
    t: i18n.t.bind(i18n),
    language,
    changeLanguage,
  };
};

export default i18n;